{"ast":null,"code":"var _jsxFileName = \"/Users/ahmettugsuz/Documents/github/ReputeAi/src/components/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    if (!isDarkMode) {\n      document.body.classList.add('dark-mode');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.body.classList.remove('dark-mode');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","document","body","classList","add","toggleTheme","setItem","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ahmettugsuz/Documents/github/ReputeAi/src/components/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark-mode');\n    }\n  }, []);\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n    if (!isDarkMode) {\n      document.body.classList.add('dark-mode');\n      localStorage.setItem('theme', 'dark');\n    } else {\n      document.body.classList.remove('dark-mode');\n      localStorage.setItem('theme', 'light');\n    }\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,KAAK,MAAM,EAAE;MACzBD,aAAa,CAAC,IAAI,CAAC;MACnBI,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC1C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBR,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B,IAAI,CAACA,UAAU,EAAE;MACfK,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;MACxCL,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACvC,CAAC,MAAM;MACLL,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACI,MAAM,CAAC,WAAW,CAAC;MAC3CR,YAAY,CAACO,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;IACxC;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,YAAY,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAEb,UAAU;MAAES;IAAY,CAAE;IAAAX,QAAA,EACvDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAClB,EAAA,CA3BWF,aAAa;AAAAqB,EAAA,GAAbrB,aAAa;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}