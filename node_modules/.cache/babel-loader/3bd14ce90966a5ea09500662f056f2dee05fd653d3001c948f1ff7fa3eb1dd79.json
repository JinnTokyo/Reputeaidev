{"ast":null,"code":"// This could be in a separate file, e.g., particles.js\nexport function setupParticles(canvas) {\n  if (!canvas) {\n    console.error('Canvas element not found');\n    return;\n  }\n  const ctx = canvas.getContext('3d');\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  const particles = [];\n  class Particle {\n    constructor() {\n      this.x = Math.random() * canvas.width;\n      this.y = Math.random() * canvas.height;\n      this.size = Math.random() * 3.4 + 1;\n      this.speedX = Math.random() * 2.5 - 0.25;\n      this.speedY = Math.random() * 2.5 - 1.25;\n      this.color = getRandomNeonColor();\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      if (this.x > canvas.width) this.x = 0;else if (this.x < 0) this.x = canvas.width;\n      if (this.y > canvas.height) this.y = 0;else if (this.y < 0) this.y = canvas.height;\n    }\n    draw() {\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fillStyle = this.color;\n      ctx.fill();\n      ctx.shadowBlur = 10;\n      ctx.shadowColor = this.color;\n    }\n  }\n  function init() {\n    for (let i = 0; i < 40; i++) {\n      particles.push(new Particle());\n    }\n  }\n  function animate() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    particles.forEach(particle => {\n      particle.update();\n      particle.draw();\n    });\n    requestAnimationFrame(animate);\n  }\n  function resizeCanvas() {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  }\n  init();\n  animate();\n  window.addEventListener('resize', resizeCanvas);\n  console.log('Particles setup complete'); // Add this line for debugging\n\n  return () => {\n    window.removeEventListener('resize', resizeCanvas);\n  };\n}\nfunction getRandomNeonColor() {\n  const neonColors = ['#ff00ff', '#ff9900', '#ff0066', '#3300ff'];\n  return neonColors[Math.floor(Math.random() * neonColors.length)];\n}\n\n// Call this function when your component mounts\nsetupParticles();\nsetupParticles();","map":{"version":3,"names":["setupParticles","canvas","console","error","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","Particle","constructor","x","Math","random","y","size","speedX","speedY","color","getRandomNeonColor","update","draw","beginPath","arc","PI","fillStyle","fill","shadowBlur","shadowColor","init","i","push","animate","clearRect","forEach","particle","requestAnimationFrame","resizeCanvas","addEventListener","log","removeEventListener","neonColors","floor","length"],"sources":["/Users/BerkanTugsuz/Documents/Github/Repute/frontend/src/particles.js"],"sourcesContent":["// This could be in a separate file, e.g., particles.js\nexport function setupParticles(canvas) {\n    if (!canvas) {\n        console.error('Canvas element not found');\n        return;\n    }\n\n    const ctx = canvas.getContext('3d');\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n  \n    const particles = [];\n  \n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.size = Math.random() * 3.4 + 1;\n        this.speedX = Math.random() * 2.5 - 0.25;\n        this.speedY = Math.random() * 2.5 - 1.25;\n        this.color = getRandomNeonColor();\n      }\n  \n      update() {\n        this.x += this.speedX;\n        this.y += this.speedY;\n  \n        if (this.x > canvas.width) this.x = 0;\n        else if (this.x < 0) this.x = canvas.width;\n        if (this.y > canvas.height) this.y = 0;\n        else if (this.y < 0) this.y = canvas.height;\n      }\n  \n      draw() {\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n  \n        ctx.shadowBlur = 10;\n        ctx.shadowColor = this.color;\n      }\n    }\n  \n    function init() {\n      for (let i = 0; i < 40; i++) {\n        particles.push(new Particle());\n      }\n    }\n  \n    function animate() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.update();\n        particle.draw();\n      });\n      requestAnimationFrame(animate);\n    }\n  \n    function resizeCanvas() {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    }\n  \n    init();\n    animate();\n  \n    window.addEventListener('resize', resizeCanvas);\n  \n    console.log('Particles setup complete'); // Add this line for debugging\n  \n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n    };\n  }\n  \n  function getRandomNeonColor() {\n    const neonColors = ['#ff00ff', '#ff9900', '#ff0066', '#3300ff'];\n    return neonColors[Math.floor(Math.random() * neonColors.length)];\n  }\n  \n  // Call this function when your component mounts\n  setupParticles();\n  setupParticles();"],"mappings":"AAAA;AACA,OAAO,SAASA,cAAcA,CAACC,MAAM,EAAE;EACnC,IAAI,CAACA,MAAM,EAAE;IACTC,OAAO,CAACC,KAAK,CAAC,0BAA0B,CAAC;IACzC;EACJ;EAEA,MAAMC,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;EACnCJ,MAAM,CAACK,KAAK,GAAGC,MAAM,CAACC,UAAU;EAChCP,MAAM,CAACQ,MAAM,GAAGF,MAAM,CAACG,WAAW;EAElC,MAAMC,SAAS,GAAG,EAAE;EAEpB,MAAMC,QAAQ,CAAC;IACbC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,MAAM,CAACK,KAAK;MACrC,IAAI,CAACW,CAAC,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGf,MAAM,CAACQ,MAAM;MACtC,IAAI,CAACS,IAAI,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;MACnC,IAAI,CAACG,MAAM,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;MACxC,IAAI,CAACI,MAAM,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI;MACxC,IAAI,CAACK,KAAK,GAAGC,kBAAkB,CAAC,CAAC;IACnC;IAEAC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACT,CAAC,IAAI,IAAI,CAACK,MAAM;MACrB,IAAI,CAACF,CAAC,IAAI,IAAI,CAACG,MAAM;MAErB,IAAI,IAAI,CAACN,CAAC,GAAGb,MAAM,CAACK,KAAK,EAAE,IAAI,CAACQ,CAAC,GAAG,CAAC,CAAC,KACjC,IAAI,IAAI,CAACA,CAAC,GAAG,CAAC,EAAE,IAAI,CAACA,CAAC,GAAGb,MAAM,CAACK,KAAK;MAC1C,IAAI,IAAI,CAACW,CAAC,GAAGhB,MAAM,CAACQ,MAAM,EAAE,IAAI,CAACQ,CAAC,GAAG,CAAC,CAAC,KAClC,IAAI,IAAI,CAACA,CAAC,GAAG,CAAC,EAAE,IAAI,CAACA,CAAC,GAAGhB,MAAM,CAACQ,MAAM;IAC7C;IAEAe,IAAIA,CAAA,EAAG;MACLpB,GAAG,CAACqB,SAAS,CAAC,CAAC;MACfrB,GAAG,CAACsB,GAAG,CAAC,IAAI,CAACZ,CAAC,EAAE,IAAI,CAACG,CAAC,EAAE,IAAI,CAACC,IAAI,EAAE,CAAC,EAAEH,IAAI,CAACY,EAAE,GAAG,CAAC,CAAC;MAClDvB,GAAG,CAACwB,SAAS,GAAG,IAAI,CAACP,KAAK;MAC1BjB,GAAG,CAACyB,IAAI,CAAC,CAAC;MAEVzB,GAAG,CAAC0B,UAAU,GAAG,EAAE;MACnB1B,GAAG,CAAC2B,WAAW,GAAG,IAAI,CAACV,KAAK;IAC9B;EACF;EAEA,SAASW,IAAIA,CAAA,EAAG;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BtB,SAAS,CAACuB,IAAI,CAAC,IAAItB,QAAQ,CAAC,CAAC,CAAC;IAChC;EACF;EAEA,SAASuB,OAAOA,CAAA,EAAG;IACjB/B,GAAG,CAACgC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEnC,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACQ,MAAM,CAAC;IAChDE,SAAS,CAAC0B,OAAO,CAACC,QAAQ,IAAI;MAC5BA,QAAQ,CAACf,MAAM,CAAC,CAAC;MACjBe,QAAQ,CAACd,IAAI,CAAC,CAAC;IACjB,CAAC,CAAC;IACFe,qBAAqB,CAACJ,OAAO,CAAC;EAChC;EAEA,SAASK,YAAYA,CAAA,EAAG;IACtBvC,MAAM,CAACK,KAAK,GAAGC,MAAM,CAACC,UAAU;IAChCP,MAAM,CAACQ,MAAM,GAAGF,MAAM,CAACG,WAAW;EACpC;EAEAsB,IAAI,CAAC,CAAC;EACNG,OAAO,CAAC,CAAC;EAET5B,MAAM,CAACkC,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;EAE/CtC,OAAO,CAACwC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;;EAEzC,OAAO,MAAM;IACXnC,MAAM,CAACoC,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;EACpD,CAAC;AACH;AAEA,SAASlB,kBAAkBA,CAAA,EAAG;EAC5B,MAAMsB,UAAU,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;EAC/D,OAAOA,UAAU,CAAC7B,IAAI,CAAC8B,KAAK,CAAC9B,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG4B,UAAU,CAACE,MAAM,CAAC,CAAC;AAClE;;AAEA;AACA9C,cAAc,CAAC,CAAC;AAChBA,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}