{"ast":null,"code":"var _jsxFileName = \"/Users/BerkanTugsuz/Documents/Github/Repute/frontend/src/components/InteractiveTestimonial.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './InteractiveTestimonial.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst portraits = ['/path/to/portrait1.jpg', '/path/to/portrait2.jpg', '/path/to/portrait3.jpg'\n// Add more image paths\n];\nconst testimonials = [\"This product has transformed my business!\", \"Amazing service and fantastic results.\", \"I couldn't be happier with the outcomes.\"\n// Add more testimonial texts\n];\nconst starRatings = [3, 4, 5];\nconst InteractiveTestimonial = () => {\n  _s();\n  const [portrait, setPortrait] = useState(portraits[0]);\n  const [testimonial, setTestimonial] = useState('Click \"Generate\" to see a testimonial');\n  const [rating, setRating] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const generateTestimonial = () => {\n    setIsGenerating(true);\n\n    // Generate portrait\n    let portraitInterval = setInterval(() => {\n      setPortrait(portraits[Math.floor(Math.random() * portraits.length)]);\n    }, 100);\n    setTimeout(() => {\n      clearInterval(portraitInterval);\n      setPortrait(portraits[Math.floor(Math.random() * portraits.length)]);\n    }, 1500);\n\n    // Generate testimonial text\n    setTimeout(() => {\n      let testimonialInterval = setInterval(() => {\n        setTestimonial(testimonials[Math.floor(Math.random() * testimonials.length)]);\n      }, 100);\n      setTimeout(() => {\n        clearInterval(testimonialInterval);\n        setTestimonial(testimonials[Math.floor(Math.random() * testimonials.length)]);\n      }, 1500);\n    }, 1000);\n\n    // Generate star rating\n    setTimeout(() => {\n      let ratingInterval = setInterval(() => {\n        setRating(starRatings[Math.floor(Math.random() * starRatings.length)]);\n      }, 100);\n      setTimeout(() => {\n        clearInterval(ratingInterval);\n        setRating(starRatings[Math.floor(Math.random() * starRatings.length)]);\n        setIsGenerating(false);\n      }, 1500);\n    }, 2000);\n  };\n  const generateStars = rating => {\n    return Array(5).fill(0).map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `star ${index < rating ? 'filled' : ''}`,\n      children: index < rating ? '⭐' : '☆'\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"interactive-testimonial\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateTestimonial,\n      disabled: isGenerating,\n      children: \"Generate Testimonial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `testimonial-container ${isGenerating ? 'generating' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testimonial-portrait\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: portrait,\n          alt: \"Portrait of a person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testimonial-text\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: testimonial\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"testimonial-stars\",\n        children: generateStars(rating)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(InteractiveTestimonial, \"5XaNEBGFk5vMHeMRE2j9uea2++0=\");\n_c = InteractiveTestimonial;\nexport default InteractiveTestimonial;\nvar _c;\n$RefreshReg$(_c, \"InteractiveTestimonial\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","portraits","testimonials","starRatings","InteractiveTestimonial","_s","portrait","setPortrait","testimonial","setTestimonial","rating","setRating","isGenerating","setIsGenerating","generateTestimonial","portraitInterval","setInterval","Math","floor","random","length","setTimeout","clearInterval","testimonialInterval","ratingInterval","generateStars","Array","fill","map","_","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","src","alt","_c","$RefreshReg$"],"sources":["/Users/BerkanTugsuz/Documents/Github/Repute/frontend/src/components/InteractiveTestimonial.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './InteractiveTestimonial.css';\n\nconst portraits = [\n  '/path/to/portrait1.jpg',\n  '/path/to/portrait2.jpg',\n  '/path/to/portrait3.jpg',\n  // Add more image paths\n];\n\nconst testimonials = [\n  \"This product has transformed my business!\",\n  \"Amazing service and fantastic results.\",\n  \"I couldn't be happier with the outcomes.\",\n  // Add more testimonial texts\n];\n\nconst starRatings = [3, 4, 5];\n\nconst InteractiveTestimonial = () => {\n  const [portrait, setPortrait] = useState(portraits[0]);\n  const [testimonial, setTestimonial] = useState('Click \"Generate\" to see a testimonial');\n  const [rating, setRating] = useState(0);\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  const generateTestimonial = () => {\n    setIsGenerating(true);\n    \n    // Generate portrait\n    let portraitInterval = setInterval(() => {\n      setPortrait(portraits[Math.floor(Math.random() * portraits.length)]);\n    }, 100);\n\n    setTimeout(() => {\n      clearInterval(portraitInterval);\n      setPortrait(portraits[Math.floor(Math.random() * portraits.length)]);\n    }, 1500);\n\n    // Generate testimonial text\n    setTimeout(() => {\n      let testimonialInterval = setInterval(() => {\n        setTestimonial(testimonials[Math.floor(Math.random() * testimonials.length)]);\n      }, 100);\n\n      setTimeout(() => {\n        clearInterval(testimonialInterval);\n        setTestimonial(testimonials[Math.floor(Math.random() * testimonials.length)]);\n      }, 1500);\n    }, 1000);\n\n    // Generate star rating\n    setTimeout(() => {\n      let ratingInterval = setInterval(() => {\n        setRating(starRatings[Math.floor(Math.random() * starRatings.length)]);\n      }, 100);\n\n      setTimeout(() => {\n        clearInterval(ratingInterval);\n        setRating(starRatings[Math.floor(Math.random() * starRatings.length)]);\n        setIsGenerating(false);\n      }, 1500);\n    }, 2000);\n  };\n\n  const generateStars = (rating) => {\n    return Array(5).fill(0).map((_, index) => (\n      <span key={index} className={`star ${index < rating ? 'filled' : ''}`}>\n        {index < rating ? '⭐' : '☆'}\n      </span>\n    ));\n  };\n\n  return (\n    <div className=\"interactive-testimonial\">\n      <button onClick={generateTestimonial} disabled={isGenerating}>\n        Generate Testimonial\n      </button>\n      <div className={`testimonial-container ${isGenerating ? 'generating' : ''}`}>\n        <div className=\"testimonial-portrait\">\n          <img src={portrait} alt=\"Portrait of a person\" />\n        </div>\n        <div className=\"testimonial-text\">\n          <p>{testimonial}</p>\n        </div>\n        <div className=\"testimonial-stars\">\n          {generateStars(rating)}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InteractiveTestimonial;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}